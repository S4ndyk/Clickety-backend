{"version":3,"sources":["usePoints.js","usePopUp.js","App.js","index.js"],"names":["socket","io","usePopUp","useState","notification","setNotification","prevTimeout","setPrevTimeout","message","time","clearTimeout","setTimeout","App","startingPoints","clicks","setClicks","points","setPoints","useEffect","prevPoints","window","localStorage","getItem","parseInt","getPrize","clk","on","total","newPoints","setItem","emit","usePoints","click","restart","tillNextPopUp","setTillNextPopUp","prizePopUp","setPrizePopUp","hideWithNoText","text","display","className","Container","Row","Alert","variant","style","Badge","Button","type","onClick","tillNext","prize","ReactDOM","render","document","getElementById"],"mappings":"8PAGMA,E,MAASC,GAAG,KCDLC,EAAW,WAAO,IAAD,EACYC,mBAAS,MADrB,mBACrBC,EADqB,KACPC,EADO,OAEUF,mBAAS,MAFnB,mBAErBG,EAFqB,KAERC,EAFQ,KAU5B,MAAO,CAACH,EANO,SAACI,GAAuB,IAAdC,EAAa,uDAAN,EAC9BC,aAAaJ,GACbD,EAAgBG,GAChBD,EAAeI,YAAW,kBAAMN,EAAgB,QAAO,IAAOI,OC6CnDG,EA7CH,WAAO,IAAD,EFJO,SAACC,GAAoB,IAAD,EACfV,mBAAS,GADM,mBACpCW,EADoC,KAC5BC,EAD4B,OAEfZ,mBAASU,GAFM,mBAEpCG,EAFoC,KAE5BC,EAF4B,KAI3CC,qBAAU,WACR,IAAMC,EAAaC,OAAOC,aAAaC,QAAQ,UAC3CH,GACFF,EAAUM,SAASJ,MAEpB,IAEH,IAAMK,EAAW,SAACC,GAChB,OAAIA,GAAO,EAAU,EACjBA,EAAM,MAAQ,EAAU,IACxBA,EAAM,MAAQ,EAAU,GACxBA,EAAM,KAAO,EAAU,EACpB,GAGTzB,EAAO0B,GAAG,eAAe,SAAAC,GACvBZ,EAAUY,MAiBZ,MAAO,CAACX,EAdM,WACZ,GAAIA,EAAS,EAAG,CACd,IAAMY,EAAaZ,EAAS,EAAKQ,EAASV,EAAS,GACnDG,EAAUW,GACVR,OAAOC,aAAaQ,QAAQ,SAAUD,GACtC5B,EAAO8B,KAAK,SAId,MAAO,CAFmB,EAAIhB,EAAS,GACzBU,EAASV,EAAS,KAIlB,kBAAMG,EAAUJ,KE9BCkB,CAAU,IAD3B,mBACTf,EADS,KACDgB,EADC,KACMC,EADN,OAE0B/B,IAF1B,mBAETgC,EAFS,KAEMC,EAFN,OAGoBjC,IAHpB,mBAGTkC,EAHS,KAGGC,EAHH,KAgBVC,EAAiB,SAACC,GACtB,IAAKA,EAAM,MAAO,CAAEC,QAAS,SAO/B,OACE,yBAAKC,UAAU,aACb,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,MAAOR,EAAeF,IAAcA,IAE/D,kBAACO,EAAA,EAAD,KACE,kBAACI,EAAA,EAAD,CAAOF,QAAQ,QAAO,uCAAa7B,KAErC,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAOC,QAAQ,UAAUC,MAAOR,EAAeJ,IAAiBA,IAElE,kBAACS,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAQC,KAAK,SAASC,QAhCV,WAAO,IAAD,EACElB,IADF,mBACjBmB,EADiB,KACPC,EADO,KAEpBD,EAAW,GACbhB,EAAiB,QAAD,OAASgB,EAAT,6BAEdC,EAAQ,GACVf,EAAc,0BAAD,OAA2Be,EAA3B,gBA0BT,YACA,kBAACJ,EAAA,EAAD,CAAQC,KAAK,SAASC,QAASjB,GAA/B,eC3CVoB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.30701e93.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport io from 'socket.io-client'\n\nconst socket = io('/')\n\nexport const usePoints = (startingPoints) => {\n  const [clicks, setClicks] = useState(0)\n  const [points, setPoints] = useState(startingPoints)\n\n  useEffect(() => {\n    const prevPoints = window.localStorage.getItem('points')\n    if (prevPoints) {\n      setPoints(parseInt(prevPoints))\n    }\n  }, [])\n\n  const getPrize = (clk) => {\n    if (clk <= 0) return 0\n    if (clk % 500 === 0) return 250\n    if (clk % 100 === 0) return 40\n    if (clk % 10 === 0) return 5\n    return 0\n  }\n\n  socket.on('totalClicks', total => {\n    setClicks(total)\n  })\n\n  const click = () => {\n    if (points > 0) {\n      const newPoints = (points - 1) + getPrize(clicks + 1)\n      setPoints(newPoints)\n      window.localStorage.setItem('points', newPoints)\n      socket.emit('click')\n    }\n    const clicksToNextPrize = 9 - clicks % 10\n    const prize = getPrize(clicks + 1)\n    return [clicksToNextPrize, prize]\n  }\n\n  const restart = () => setPoints(startingPoints)\n\n  return [points, click, restart]\n}\n\n","import { useState } from 'react'\n\nexport const usePopUp = () => {\n  const [notification, setNotification] = useState(null)\n  const [prevTimeout, setPrevTimeout] = useState(null)\n\n  const notify = (message, time = 3) => {\n    clearTimeout(prevTimeout)\n    setNotification(message)\n    setPrevTimeout(setTimeout(() => setNotification(null), 1000 * time))\n  }\n\n  return [notification, notify]\n}\n\nexport default usePopUp","import React from 'react';\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Alert'\nimport Badge from 'react-bootstrap/Badge'\nimport Row from 'react-bootstrap/Row'\nimport Container from 'react-bootstrap/Container'\nimport { usePoints } from './usePoints'\nimport { usePopUp } from './usePopUp';\n\nconst App = () => {\n  const [points, click, restart] = usePoints(20)\n  const [tillNextPopUp, setTillNextPopUp] = usePopUp()\n  const [prizePopUp, setPrizePopUp] = usePopUp()\n\n  const handleClick = () => {\n    const [tillNext, prize] = click()\n    if (tillNext > 0) {\n      setTillNextPopUp(`ONLY ${tillNext} CLICKS UNTIL NEXT PRIZE`)\n    }\n    if (prize > 0) {\n      setPrizePopUp(`CONGRATULATION YOU WON ${prize} POINTS!!`)\n    }\n  }\n\n\n  const hideWithNoText = (text) => {\n    if (!text) return { display: 'none' }\n  }\n\n  const hideWhenPoints = () => {\n    if (points > 0) return { display: 'none'}\n  }\n\n  return (\n    <div className='container'>\n      <Container>\n        <Row>\n          <Alert variant='success' style={hideWithNoText(prizePopUp)}>{prizePopUp}</Alert>\n        </Row>\n        <Row>\n          <Badge variant='info'><h2>points: {points}</h2></Badge>\n        </Row>\n        <Row>\n          <Alert variant='primary' style={hideWithNoText(tillNextPopUp)}>{tillNextPopUp}</Alert>\n        </Row>\n        <Row>\n          <Button type='button' onClick={handleClick}>click me</Button>\n          <Button type='button' onClick={restart}>restart</Button>\n        </Row>\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}